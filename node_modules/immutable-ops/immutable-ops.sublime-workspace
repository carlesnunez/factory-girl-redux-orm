{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"immutableO",
				"immutableOperations"
			],
			[
				"second",
				"secondAnotherValue"
			],
			[
				"get",
				"getBatchToken"
			],
			[
				"without",
				"withoutLeadingSlash"
			],
			[
				"relat",
				"relatedPublishers"
			],
			[
				"fieldB",
				"fieldBName"
			],
			[
				"fieldA",
				"fieldAName"
			],
			[
				"from",
				"fromFieldName"
			],
			[
				"through",
				"throughModelName"
			],
			[
				"session",
				"sessionBoundModels"
			],
			[
				"un",
				"unappliedUpdates"
			],
			[
				"onClose",
				"onCloseCallbacks"
			],
			[
				"getI",
				"getImmutableOps"
			],
			[
				"onC",
				"onCloseCallbacks"
			],
			[
				"nex",
				"nextModelState"
			],
			[
				"updates",
				"updatesByModelName"
			],
			[
				"prev",
				"prevStateCopied"
			],
			[
				"declar",
				"declaredFromModelName"
			],
			[
				"dec",
				"declaredFromModelName"
			],
			[
				"sesion",
				"sessionBoundModel"
			],
			[
				"sessoin",
				"sessionBoundModels"
			],
			[
				"mutableArr",
				"mutableArrRemove"
			],
			[
				"mutable",
				"mutableArrInsert"
			],
			[
				"imm",
				"immutableArrRemove"
			],
			[
				"immut",
				"immutableArrInsert"
			],
			[
				"muta",
				"mutableMapOmit"
			],
			[
				"mutableMap",
				"mutableMapUpdate"
			],
			[
				"immuta",
				"immutableMapUpdate"
			],
			[
				"immu",
				"immutableMapUpdate"
			],
			[
				"sess",
				"sessionSpecificModel"
			],
			[
				"getNex",
				"getNextStateSpy"
			],
			[
				"objec",
				"objectShallowEquals"
			],
			[
				"unex",
				"unexistingId"
			],
			[
				"nextSta",
				"nextStateCopied"
			],
			[
				"next",
				"nextStateCopied"
			],
			[
				"M",
				"MOCHA_TARGET"
			],
			[
				"rever",
				"reverseFieldErrorMessage"
			],
			[
				"rel",
				"relatedName"
			],
			[
				"backe",
				"backendMock"
			],
			[
				"acces",
				"accessIdStub"
			],
			[
				"Book",
				"Book"
			],
			[
				"nextN",
				"nextNextState"
			],
			[
				"new",
				"newName"
			],
			[
				"left",
				"leftToDefine"
			],
			[
				"create",
				"createTestSessionWithData"
			],
			[
				"defin",
				"definedProperties"
			],
			[
				"declare",
				"declaredFieldName"
			],
			[
				"Backe",
				"BackendClass"
			],
			[
				"Bace",
				"BackendClass"
			],
			[
				"sel",
				"selectorTimesRun"
			],
			[
				"upda",
				"updateObj"
			],
			[
				"location",
				"locationDescriptor"
			],
			[
				"model",
				"modelNameToInvalidatorMap"
			],
			[
				"arra",
				"arrayDiffActions"
			],
			[
				"reu",
				"returnBranch"
			],
			[
				"shoul",
				"shouldUpdateObj"
			],
			[
				"mark",
				"markAccessedSpy"
			],
			[
				"getTe",
				"getTestModelDefs"
			],
			[
				"Biog",
				"Biography"
			],
			[
				"books",
				"booksDescriptor"
			],
			[
				"throug",
				"throughQs"
			],
			[
				"fiel",
				"fieldName"
			],
			[
				"backwards",
				"backwardsFieldName"
			],
			[
				"ses",
				"sessionMock"
			],
			[
				"supp",
				"suppliedState"
			],
			[
				"Profie",
				"ProfileModel"
			],
			[
				"addMtat",
				"addMutationSpy"
			],
			[
				"getQue",
				"getQuerySet"
			],
			[
				"qer",
				"querySetSharedMethods"
			],
			[
				"qu",
				"querySetSharedMethods"
			],
			[
				"forwa",
				"forwardsManyToOneDescriptor"
			],
			[
				"query",
				"querySetDelegatorFactory"
			],
			[
				"querySet",
				"querySetSharedMethods"
			],
			[
				"getQuer",
				"getQuerySetFromIds"
			],
			[
				"throu",
				"throughQs"
			],
			[
				"toMode",
				"toModelName"
			],
			[
				"relae",
				"relatedModelName"
			],
			[
				"access",
				"accessIdSpy"
			],
			[
				"relatedModel",
				"relatedModelName"
			],
			[
				"getRel",
				"getRelatedModel"
			],
			[
				"enti",
				"entitiesToDelete"
			],
			[
				"ids",
				"idsToRemove"
			],
			[
				"id",
				"idAttribute"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"m2m",
				"m2mFromFieldName"
			],
			[
				"relate",
				"relatedModelName"
			],
			[
				"entit",
				"entityWithM2M"
			],
			[
				"ent",
				"entityWithM2M"
			],
			[
				"Query",
				"QuerySetClass"
			],
			[
				"overM",
				"overMiddleAgedFromManager"
			],
			[
				"EntityMAnager",
				"EntityManagerExtend"
			],
			[
				"plain",
				"plainEntities"
			],
			[
				"met",
				"methodNamesToAttach"
			],
			[
				"getIdA",
				"getIdAttribute"
			],
			[
				"cre",
				"createManager"
			],
			[
				"_get",
				"_getQuerySet"
			],
			[
				"getEnti",
				"getEntityMap"
			],
			[
				"Enti",
				"EntityManager"
			],
			[
				"dele",
				"deleteKeyFromMap"
			],
			[
				"delimi",
				"delimiterStackTop"
			],
			[
				"remoe",
				"removeElementAt"
			],
			[
				"pre",
				"preceded_by_punctuation"
			],
			[
				"prece",
				"preceded_by_whitespace"
			],
			[
				"follo",
				"followed_by_punctuation"
			],
			[
				"followed",
				"followed_by_whitespace"
			],
			[
				"charac",
				"characterList"
			],
			[
				"delim",
				"delimiterStack"
			],
			[
				"newNo",
				"newNodeChildren"
			],
			[
				"getL",
				"getLinkedListNodesBetween"
			],
			[
				"text",
				"textContentNode"
			],
			[
				"op",
				"openerPos"
			],
			[
				"removeElemen",
				"removeElementAt"
			],
			[
				"remove",
				"removeDelimitersFromNode"
			],
			[
				"curr",
				"currentStackPos"
			],
			[
				"del",
				"delimiterStack"
			],
			[
				"EM",
				"EM_TYPE"
			],
			[
				"STRON",
				"STRONG_TYPE"
			],
			[
				"num",
				"numDelimiters"
			],
			[
				"set",
				"setContainTypes"
			],
			[
				"BLANK",
				"BLANK_TYPE"
			],
			[
				"L",
				"LINE_ENDING"
			],
			[
				"retur",
				"return_list"
			],
			[
				"append",
				"appendText"
			],
			[
				"fu",
				"function"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/index.js",
			"settings":
			{
				"buffer_size": 11929,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/index.js",
			"settings":
			{
				"buffer_size": 13712,
				"line_ending": "Unix"
			}
		},
		{
			"file": ".babelrc",
			"settings":
			{
				"buffer_size": 78,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "{"
			}
		},
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 8984,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "package.json",
			"settings":
			{
				"buffer_size": 982,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": ".eslintrc",
			"settings":
			{
				"buffer_size": 745,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/test/testOperations.js",
			"settings":
			{
				"buffer_size": 16656,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "immutable-ops.sublime-project",
			"settings":
			{
				"buffer_size": 341,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 147.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"upgra",
				"Package Control: Upgrade Package"
			],
			[
				"update p",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 146.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/tommi/Projects/immutable-ops",
		"/Users/tommi/Projects/immutable-ops/src",
		"/Users/tommi/Projects/immutable-ops/src/test"
	],
	"file_history":
	[
		"/Users/tommi/Projects/redux-orm/dist/ReduxOrm.js",
		"/Users/tommi/Projects/redux-orm/src/QuerySet.js",
		"/Users/tommi/Projects/redux-orm/src/utils.js",
		"/Users/tommi/Projects/redux-orm/redux-orm.sublime-project",
		"/Users/tommi/Projects/redux-orm/README.md",
		"/Users/tommi/Projects/redux-orm/lib/fields.js",
		"/Users/tommi/Projects/redux-orm/lib/Model.js",
		"/Users/tommi/Projects/redux-orm/src/test/testUtils.js",
		"/Users/tommi/Projects/redux-orm/src/test/testSession.js",
		"/Users/tommi/Projects/redux-orm/src/Schema.js",
		"/Users/tommi/Projects/redux-orm/src/Backend.js",
		"/Users/tommi/Projects/redux-orm/src/test/testSchema.js",
		"/Users/tommi/Projects/redux-orm/src/test/testQuerySet.js",
		"/Users/tommi/Projects/redux-orm/src/descriptors.js",
		"/Users/tommi/Projects/redux-orm/src/index.js",
		"/Users/tommi/Projects/redux-orm/src/memoize.js",
		"/Users/tommi/Projects/redux-orm/package.json",
		"/Users/tommi/Projects/redux-orm/.babelrc",
		"/Users/tommi/Projects/redux-orm/Makefile",
		"/Users/tommi/Projects/redux-orm/src/test/testIntegrations.js",
		"/Users/tommi/Projects/redux-orm/src/Model.js",
		"/Users/tommi/Projects/redux-orm/src/test/testModel.js",
		"/Users/tommi/Projects/redux-orm/src/Transaction.js",
		"/Users/tommi/Projects/redux-orm/src/Session.js",
		"/Users/tommi/Projects/redux-orm/src/test/testBackend.js",
		"/Users/tommi/Projects/redux-orm/src/constants.js",
		"/Users/tommi/Projects/redux-orm/src/test/utils.js",
		"/Users/tommi/Projects/redux-orm/src/fields.js",
		"/Users/tommi/Projects/redux-orm/lib/index.js",
		"/Users/tommi/Projects/redux-orm/lib/Schema.js",
		"/Users/tommi/Projects/redux-orm/src/test/testIntegrationsOld.js",
		"/Users/tommi/Projects/redux-orm/lib/descriptors.js",
		"/Users/tommi/Projects/redux-orm/src/test/testMeta.js",
		"/Users/tommi/Projects/redux-orm/src/Meta.js",
		"/Users/tommi/Projects/redux-orm/src/Manager.js",
		"/Users/tommi/Projects/redux-orm/jsdoc.conf.json",
		"/Users/tommi/Projects/redux-orm/.gitignore",
		"/Users/tommi/Projects/redux-orm/docs/index.html",
		"/Users/tommi/Projects/redux-orm/lib/Meta.js",
		"/Users/tommi/Projects/redux-orm/src/test/testEntityManager.js",
		"/Users/tommi/Projects/redux-orm/src/BaseModel.js",
		"/Users/tommi/Projects/redux-orm/src/test/testEntity.js",
		"/Users/tommi/Projects/redux-orm/src/Entity.js",
		"/Users/tommi/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/tommi/Projects/redux-orm/src/EntityManager.js",
		"/Users/tommi/Projects/redux-orm/dist/index.js",
		"/Users/tommi/Projects/redux-orm/gulpfile.js",
		"/Users/tommi/Projects/redux-orm/dist/utils.js",
		"/Users/tommi/Projects/redux-orm/.npmignore",
		"/Users/tommi/Projects/redux-orm/.eslintrc",
		"/Users/tommi/Projects/redux-orm/.eslintignore",
		"/Users/tommi/Projects/redux-orm/LICENSE",
		"/Users/tommi/Projects/redux-orm/.jscsrc",
		"/Users/tommi/Projects/mysite/source/2015-11-17-django-datetimes-and-timezones.html.markdown",
		"/Users/tommi/Projects/simplemdjs/parser.js",
		"/Users/tommi/Projects/simplemdjs/constants.js",
		"/Users/tommi/Projects/simplemdjs/node.js",
		"/Users/tommi/Projects/simplemdjs/renderer.js",
		"/Users/tommi/Library/Application Support/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"-node_modules/, -lib/, -min/, -.publish/, -docs/",
			"-node_modules/, -lib/, -min/, -publish/, -docs/",
			"*.js, -node_modules/, -lib/, -min/, -publish/, -docs/",
			"*.js, -node_modules/, -lib/",
			"*.js, -/node_modules/, -/lib/",
			"*.js, -/node_modules/",
			"*.js, -node_modules",
			"*.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"push",
			"function mutable",
			"canMutate",
			"mutableOmit",
			"opts.",
			"function uniq",
			"register",
			"sessionData",
			"apply",
			"accessIds",
			".include",
			"indexById",
			"mockSession",
			"console.",
			"getNextState",
			"updateReducer",
			"orderBy",
			"accessId",
			"orderBy",
			"sortByOrder",
			"from 'lodash",
			"import 'lodash",
			"indexBy",
			"where",
			"findWhere",
			"min",
			"max",
			"pluck",
			"partition",
			"sessi",
			"connect(",
			"Descriptor",
			"getQuerySet",
			".models",
			"withMutations",
			".models",
			"filter",
			"this.models",
			"withRefs.",
			"_getBackendOpts",
			"addUpdate",
			"withId",
			"getState",
			"bool",
			"getDefaultState",
			"this.models",
			"_getModel",
			"getDefaultState",
			"catch",
			"throw",
			"accessId",
			"diff",
			"diffe",
			"getNextState",
			"updateReducer",
			"update(",
			"update",
			"order",
			"addUpdate",
			"UPDATE",
			"toPlain",
			".plain",
			"this.state",
			"accessId",
			"getBackend",
			"ref",
			"at(",
			"update(",
			"session",
			"updateReducer",
			"create",
			"console.",
			"plain",
			".plain",
			"withRefs",
			"plain",
			"at(",
			"createTestS",
			"virtualFields",
			"sessionData",
			"sessionCache",
			"_session",
			"sessionCache",
			"getUpdatesFor",
			"coverDescriptor",
			"getModelCl",
			"setupModel",
			"']);",
			"getBackend",
			"idAttribute",
			"instanceof",
			"definedProperties",
			"virtualFields",
			"getId",
			"idAttribute",
			"create",
			"getDefaultState",
			"getBackend(",
			"idAttribute",
			"getId(",
			"update(",
			"_setupDone",
			"invalidateCaches",
			"getBackend",
			"connect",
			"branchName",
			"muta",
			"Mutation",
			"mutation",
			"Mutation",
			"mutations",
			"getName()",
			"getBackendInstance",
			"meta",
			"Meta",
			"meta",
			"Meta",
			"addMutation",
			".state",
			"toPlain",
			"definedProperties",
			"push",
			"_meta",
			"query",
			"QuerySet",
			".fields",
			"meta(",
			"MetaOp"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"orderBy",
			"sessionData",
			"isSetUp",
			"invalidateClassCache",
			"update",
			"Update",
			"updates",
			"modelName",
			"getBackend",
			"backend",
			"Backend",
			"backend",
			"Backend",
			"withId",
			"Model",
			"mutations",
			"Saving",
			"saving",
			"\"p\""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/index.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11929,
						"regions":
						{
						},
						"selection":
						[
							[
								2055,
								2055
							]
						],
						"settings":
						{
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1417.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "lib/index.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13712,
						"regions":
						{
						},
						"selection":
						[
							[
								3588,
								3588
							]
						],
						"settings":
						{
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1937.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": ".babelrc",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 78,
						"regions":
						{
						},
						"selection":
						[
							[
								78,
								78
							]
						],
						"settings":
						{
							"auto_name": "{",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8984,
						"regions":
						{
						},
						"selection":
						[
							[
								8048,
								8048
							]
						],
						"settings":
						{
							"syntax": "Packages/MarkdownLight/MarkdownLight.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"wrap_width": 80
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 982,
						"regions":
						{
						},
						"selection":
						[
							[
								616,
								616
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JSON (JavaScriptNext).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": ".eslintrc",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 745,
						"regions":
						{
						},
						"selection":
						[
							[
								642,
								642
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/test/testOperations.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16656,
						"regions":
						{
						},
						"selection":
						[
							[
								16191,
								16191
							]
						],
						"settings":
						{
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7881.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "immutable-ops.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 341,
						"regions":
						{
						},
						"selection":
						[
							[
								256,
								256
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JSON (JavaScriptNext).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "immutable-ops.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 209.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
